/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;
import controlador.AlumnoDAO;
import controlador.*;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import modelo.*;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Laboratorio
 */
public class CrudCarreras extends javax.swing.JFrame {

    /**
     * Creates new form CrudCarreras
     */
    public CrudCarreras() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonAgregarCarre = new javax.swing.JButton();
        jButtonBuscarCarre = new javax.swing.JButton();
        jButtonVolverCarre = new javax.swing.JButton();
        jButtonEliminarCarre = new javax.swing.JButton();
        jButtonModificarCarre = new javax.swing.JButton();
        jButtonLimpiarCarre = new javax.swing.JButton();
        jTextFieldIdCarreras = new javax.swing.JTextField();
        jComboBoxNombreCarrera = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MANTENEDOR CARRERAS");

        jLabel2.setText("ID:");

        jLabel3.setText("Nombre carrera:");

        jButtonAgregarCarre.setText("Agregar");
        jButtonAgregarCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarCarreActionPerformed(evt);
            }
        });

        jButtonBuscarCarre.setText("Buscar");
        jButtonBuscarCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarCarreActionPerformed(evt);
            }
        });

        jButtonVolverCarre.setText("Volver");
        jButtonVolverCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverCarreActionPerformed(evt);
            }
        });

        jButtonEliminarCarre.setText("Eliminar");
        jButtonEliminarCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarCarreActionPerformed(evt);
            }
        });

        jButtonModificarCarre.setText("Modificar");
        jButtonModificarCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarCarreActionPerformed(evt);
            }
        });

        jButtonLimpiarCarre.setText("Limpiar");
        jButtonLimpiarCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarCarreActionPerformed(evt);
            }
        });

        jComboBoxNombreCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Analista", "Ing Informatica", "Contador", "Enfermeria" }));
        jComboBoxNombreCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNombreCarreraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jTextFieldIdCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxNombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAgregarCarre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonBuscarCarre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonModificarCarre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEliminarCarre, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonLimpiarCarre)
                        .addGap(72, 72, 72)
                        .addComponent(jButtonVolverCarre, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldIdCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxNombreCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonAgregarCarre)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonBuscarCarre)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonEliminarCarre)
                            .addGap(21, 21, 21)
                            .addComponent(jButtonModificarCarre)
                            .addGap(80, 80, 80))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLimpiarCarre)
                            .addComponent(jButtonVolverCarre))))
                .addContainerGap(205, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarCarreActionPerformed
        // TODO add your handling code here:

        try {
            int id = Integer.valueOf(jTextFieldIdCarreras.getText());
//            int id = Integer.parseInt(jTextFieldIdCarreras.getText());
            String nombreCarrera = jComboBoxNombreCarrera.getSelectedItem().toString();
            
            System.out.println();
            System.out.println();

            if (id >=0 && !nombreCarrera.equals("")) {

                Carrera x = new Carrera(id, nombreCarrera);
                //String id, String nombre, int edad, String genero, String email, String carrera

                if (CarreraDAO.agregar(x) == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Bien, datos grabados");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error, id ya existe");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error, los campos NO deben estar vacios");
            }

            limpiar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error, edad debe ser un n√∫mero");
        }
    }//GEN-LAST:event_jButtonAgregarCarreActionPerformed

    private void jButtonBuscarCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarCarreActionPerformed
        // TODO add your handling code here:
        Carrera carrera = null;
        int id = Integer.valueOf(jTextFieldIdCarreras.getText());
        jTextFieldIdCarreras.setEnabled(false);
        jTextFieldIdCarreras.setEnabled(true);

        if (id >=0) {
            carrera = CarreraDAO.buscar(String.valueOf(id));
            if (carrera != null && carrera instanceof Carrera) {

                jTextFieldIdCarreras.setText(String.valueOf(id));
                jComboBoxNombreCarrera.setSelectedItem(carrera.getNombreCarrera());
                
                jTextFieldIdCarreras.setEnabled(true);    
                jButtonEliminarCarre.setEnabled(true);
                jButtonModificarCarre.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(rootPane, "Error, id no debe estar en blanco");
            }
        }
        
        
        
    }//GEN-LAST:event_jButtonBuscarCarreActionPerformed

    private void jButtonVolverCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverCarreActionPerformed
        // TODO add your handling code here:
        this.dispose();// cerrar solamente esta ventana, NO todas
    }//GEN-LAST:event_jButtonVolverCarreActionPerformed

    private void jButtonEliminarCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarCarreActionPerformed
        // TODO add your handling code here:

        try {
            String id = jTextFieldIdCarreras.getText();
            if (!id.equals("")) {
                int n = JOptionPane.showConfirmDialog(null, "¬øEsta seguro  que desea eliminar esta persona?",
                    "Confirmar", 0);

                if (n == 0) {
                    if (CarreraDAO.eliminar(id) == true) {
                        JOptionPane.showMessageDialog(rootPane, "Persona eliminada");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "El id no existe");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Eliminacion cancelada");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "El id no tiene que estar en blanco");
            }
            limpiar();
        } catch (Exception ev) {
            JOptionPane.showMessageDialog(rootPane, "Ocurrio un error");
        }

        //        try {
            //
            //            if (jTextFieldRut.isEnabled() == false) {
                //                String id = jTextFieldRut.getText();
                //
                //                if (CarreraDAO.eliminar(id) == true) {
                    //                    JOptionPane.showMessageDialog(rootPane, "Bien,id eliminado...");
                    //                } else {
                    //                    JOptionPane.showMessageDialog(rootPane, "Error,id no existe...");
                    //                }
                //                limpiar();
                //            }
            //        } catch (Exception ev) {
            //            JOptionPane.showMessageDialog(rootPane, "Error,id no debe estar en blanco...");
            //        }

    }//GEN-LAST:event_jButtonEliminarCarreActionPerformed

    private void jButtonModificarCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarCarreActionPerformed
        // TODO add your handling code here:
        jTextFieldIdCarreras.setEnabled(false);
        try {
            int id = Integer.parseInt(jTextFieldIdCarreras.getText());
            String nombreCarrera = jComboBoxNombreCarrera.getSelectedItem().toString();
            System.out.println(nombreCarrera);
            

            if (id >=0 && !nombreCarrera.equals("")) {

                Carrera x = new Carrera(id, nombreCarrera);
                //String id, String nombre, int edad, String genero, String email, String carrera

                if (CarreraDAO.modificar(x) == true) {
                    JOptionPane.showMessageDialog(rootPane, "Bien, datos modificados");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error, id ya existe");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error, los campos NO deben estar vacios");
            }

            limpiar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error, edad debe ser un n√∫mero");
        }
    }//GEN-LAST:event_jButtonModificarCarreActionPerformed

    private void jButtonLimpiarCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarCarreActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarCarreActionPerformed

    private void jComboBoxNombreCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNombreCarreraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxNombreCarreraActionPerformed
    public void limpiar() {
        jTextFieldIdCarreras.setText("");
        jComboBoxNombreCarrera.setSelectedIndex(0);


    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarCarre;
    private javax.swing.JButton jButtonBuscarCarre;
    private javax.swing.JButton jButtonEliminarCarre;
    private javax.swing.JButton jButtonLimpiarCarre;
    private javax.swing.JButton jButtonModificarCarre;
    private javax.swing.JButton jButtonVolverCarre;
    private javax.swing.JComboBox<String> jComboBoxNombreCarrera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldIdCarreras;
    // End of variables declaration//GEN-END:variables
}
